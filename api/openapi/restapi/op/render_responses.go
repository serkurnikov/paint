// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
)

// RenderOKCode is the HTTP code returned for type RenderOK
const RenderOKCode int = 200

/*RenderOK response

swagger:response renderOK
*/
type RenderOK struct {

	/*
	  In: Body
	*/
	Payload *RenderOKBody `json:"body,omitempty"`
}

// NewRenderOK creates RenderOK with default headers values
func NewRenderOK() *RenderOK {

	return &RenderOK{}
}

// WithPayload adds the payload to the render o k response
func (o *RenderOK) WithPayload(payload *RenderOKBody) *RenderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the render o k response
func (o *RenderOK) SetPayload(payload *RenderOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RenderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *RenderOK) RenderResponder() {}

/*RenderDefault render default

swagger:response renderDefault
*/
type RenderDefault struct {
	_statusCode int
}

// NewRenderDefault creates RenderDefault with default headers values
func NewRenderDefault(code int) *RenderDefault {
	if code <= 0 {
		code = 500
	}

	return &RenderDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the render default response
func (o *RenderDefault) WithStatusCode(code int) *RenderDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the render default response
func (o *RenderDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *RenderDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}

func (o *RenderDefault) RenderResponder() {}

type RenderNotImplementedResponder struct {
	middleware.Responder
}

func (*RenderNotImplementedResponder) RenderResponder() {}

func RenderNotImplemented() RenderResponder {
	return &RenderNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.Render has not yet been implemented",
		),
	}
}

type RenderResponder interface {
	middleware.Responder
	RenderResponder()
}
