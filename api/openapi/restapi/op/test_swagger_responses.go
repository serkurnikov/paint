// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
)

// TestOKCode is the HTTP code returned for type TestOK
const TestOKCode int = 200

/*TestOK response

swagger:response testOK
*/
type TestOK struct {

	/*
	  In: Body
	*/
	Payload *TestOKBody `json:"body,omitempty"`
}

// NewTestOK creates TestOK with default headers values
func NewTestOK() *TestOK {

	return &TestOK{}
}

// WithPayload adds the payload to the test o k response
func (o *TestOK) WithPayload(payload *TestOKBody) *TestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the test o k response
func (o *TestOK) SetPayload(payload *TestOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *TestOK) TestResponder() {}

/*TestDefault test default

swagger:response testDefault
*/
type TestDefault struct {
	_statusCode int
}

// NewTestDefault creates TestDefault with default headers values
func NewTestDefault(code int) *TestDefault {
	if code <= 0 {
		code = 500
	}

	return &TestDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the test default response
func (o *TestDefault) WithStatusCode(code int) *TestDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the test default response
func (o *TestDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *TestDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}

func (o *TestDefault) TestResponder() {}

type TestNotImplementedResponder struct {
	middleware.Responder
}

func (*TestNotImplementedResponder) TestResponder() {}

func TestNotImplemented() TestResponder {
	return &TestNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.Test has not yet been implemented",
		),
	}
}

type TestResponder interface {
	middleware.Responder
	TestResponder()
}
