// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"bytes"
	"encoding/json"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PyrMeanShiftFilterHandlerFunc turns a function with the right signature into a pyr mean shift filter handler
type PyrMeanShiftFilterHandlerFunc func(PyrMeanShiftFilterParams) PyrMeanShiftFilterResponder

// Handle executing the request and returning a response
func (fn PyrMeanShiftFilterHandlerFunc) Handle(params PyrMeanShiftFilterParams) PyrMeanShiftFilterResponder {
	return fn(params)
}

// PyrMeanShiftFilterHandler interface for that can handle valid pyr mean shift filter params
type PyrMeanShiftFilterHandler interface {
	Handle(PyrMeanShiftFilterParams) PyrMeanShiftFilterResponder
}

// NewPyrMeanShiftFilter creates a new http.Handler for the pyr mean shift filter operation
func NewPyrMeanShiftFilter(ctx *middleware.Context, handler PyrMeanShiftFilterHandler) *PyrMeanShiftFilter {
	return &PyrMeanShiftFilter{Context: ctx, Handler: handler}
}

/*PyrMeanShiftFilter swagger:route GET /v1/pyrMeanShiftFilter pyrMeanShiftFilter

pyrMeanShiftFiltering

*/
type PyrMeanShiftFilter struct {
	Context *middleware.Context
	Handler PyrMeanShiftFilterHandler
}

func (o *PyrMeanShiftFilter) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPyrMeanShiftFilterParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PyrMeanShiftFilterOKBody pyr mean shift filter o k body
//
// swagger:model PyrMeanShiftFilterOKBody
type PyrMeanShiftFilterOKBody struct {

	// result
	// Required: true
	Result interface{} `json:"result"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *PyrMeanShiftFilterOKBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// result
		// Required: true
		Result interface{} `json:"result"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Result = props.Result
	return nil
}

// Validate validates this pyr mean shift filter o k body
func (o *PyrMeanShiftFilterOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PyrMeanShiftFilterOKBody) validateResult(formats strfmt.Registry) error {

	if err := validate.Required("pyrMeanShiftFilterOK"+"."+"result", "body", o.Result); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PyrMeanShiftFilterOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PyrMeanShiftFilterOKBody) UnmarshalBinary(b []byte) error {
	var res PyrMeanShiftFilterOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
