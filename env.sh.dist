cl#!/bin/sh
# Example default ENV vars for local development.
# Do not modify `env.sh.dist` directly, copy it to (gitignored) `env.sh` and use that instead.
# Should be loaded into shell used to run `docker-compose up`.

# - Set all _PORT vars to port numbers not used by your system.

export example_mysql_addr_port="3306"

export EXAMPLE_APIKEY_ADMIN="admin"
export EXAMPLE_ADDR_HOST="localhost"
export EXAMPLE_ADDR_PORT="8000"
export EXAMPLE_METRICS_ADDR_PORT="9000"
export EXAMPLE_MYSQL_ADDR_HOST="127.0.0.1"
export EXAMPLE_MYSQL_ADDR_PORT="${example_mysql_addr_port}"
export EXAMPLE_MYSQL_AUTH_LOGIN="root"
export EXAMPLE_MYSQL_AUTH_PASS=""
export GO_TEST_TIME_FACTOR="1.0" # Increase if tests fail because of slow CPU.
export NARADA4D_TEST_MYSQL="goose-mysql://root@127.0.0.1:${example_mysql_addr_port}"

export EXAMPLE_RABBITMQ_SCHEMA="amqp"
export EXAMPLE_RABBITMQ_USERNAME="root"
export EXAMPLE_RABBITMQ_PASS="password"
export EXAMPLE_RABBITMQ_HOST="0.0.0.0"
export EXAMPLE_RABBITMQ_PORT="5672"
export EXAMPLE_RABBITMQ_VHOST="paint"
export EXAMPLE_RABBITMQ_CONNECTION_NAME="PAINT"
export EXAMPLE_RABBITMQ_CHANNEL_NOTIFY_TIMEOUT="100 * time.Millisecond"
export EXAMPLE_RABBITMQ_RECONNECT_INTERVAL="500 * time.Millisecond"
export EXAMPLE_RABBITMQ_RECONNECT_MAX_ATTEMPT="7200"

export EXAMPLE_RABBITMQ_EXCHANGE_NAME="operation"
export EXAMPLE_RABBITMQ_EXCHANGE_TYPE="direct"
export EXAMPLE_RABBITMQ_ROUTING_KEY="create"
export EXAMPLE_RABBITMQ_QUEUE_NAME="operation_create"


# DO NOT MODIFY BELOW THIS LINE!
env1="$(sed -e '/^$/d' -e '/^#/d' -e 's/=.*//' env.sh.dist)"
env2="$(sed -e '/^$/d' -e '/^#/d' -e 's/=.*//' env.sh)"
if test "$env1" != "$env2"; then
	echo
	echo "[31mFile env.sh differ from env.sh.dist, please update and reload env.sh.[0m"
	echo
	return 1
fi
